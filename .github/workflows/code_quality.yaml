name: Code Quality

on: [push, pull_request]

jobs:
  lock-file:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - run: uv lock --locked
      
  linting:
    runs-on: ubuntu-latest
    needs: [lock-file]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - run: uvx ruff check .

  formatting:
    runs-on: ubuntu-latest
    needs: [lock-file]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - run: uvx ruff format --check .

  type-checking:
    runs-on: ubuntu-latest
    needs: [lock-file]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - run: uv run pyright .

  testing:
    runs-on: ubuntu-latest
    needs: [lock-file]
    strategy:
      matrix:
        python-version: ['3.11', '3.12', '3.13']
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - uses: ./.github/actions/setup
      - run: uv run pytest -v --durations=0 --cov --cov-report=xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-${{ matrix.python-version }}
          path: coverage.xml        
  
  security:
    name: Snyk scan
    runs-on: ubuntu-latest
    needs: [linting, formatting, type-checking, testing]
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/python@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=medium
          
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    needs: [linting, formatting, type-checking, testing, security]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Download coverage report
        uses: actions/download-artifact@v4
        with:
          name: coverage-report-3.13
      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.python.coverage.reportPaths=coverage.xml
